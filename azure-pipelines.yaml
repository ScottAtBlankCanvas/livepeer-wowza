

jobs:
  - job: build_installer
    strategy:
      matrix:
        linux:
          imageName: 'ubuntu-16.04'
        mac:
          imageName: 'macos-10.13'
        windows:
          imageName: 'vs2017-win2016'
    steps:
      # Linux
      - bash: |
          apt-get update && apt-get install -y libxml2-dev libonig-dev
        condition: eq( variables['Agent.OS'], 'Linux' )
        displayName: install libraries (linux)

      # macOS
      - bash: brew install libxml2
        condition: eq( variables['Agent.OS'], 'Darwin' )
        displayName: install libraries (macos)

      # Windows
      - bash: echo 'uh oh'
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: install libraries (windows)

      - bash: |
          go build installation_script.go

  - job: build_livepeer_wowza

    pool:
      vmImage: "ubuntu-16.04"

    # variables:
    #   DOCKER_CLI_EXPERIMENTAL: enabled

    steps:
      - checkout: self
      - bash: |-
          set -e
          docker build -t livepeer-wowza --build-arg=version=$(git describe --always --tags --dirty) .
          docker create --name livepeer-wowza livepeer-wowza /bin/bash
          docker cp livepeer-wowza:/usr/local/WowzaStreamingEngine/lib/LivepeerWowza.jar ./LivepeerWowza.jar
          export BRANCH=$(Build.SourceBranchName)
          ./hack/upload-build.sh
        env:
          GCLOUD_KEY: $(GCLOUD_KEY)
          GCLOUD_SECRET: $(GCLOUD_SECRET)
          DISCORD_URL: $(DISCORD_URL)
