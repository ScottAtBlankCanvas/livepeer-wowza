

jobs:
  - job: build_installer
    strategy:
      matrix:
        linux:
          imageName: 'ubuntu-16.04'
        mac:
          imageName: 'macos-10.13'
        # windows:
        #   imageName: 'vs2017-win2016'
    pool:
      vmImage: $(imageName)
    variables:
      GOBIN:  '$(GOPATH)/bin' # Go binaries path
      # GOROOT: '/usr/local/go1.12' # Go installation path
      GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
      modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

    steps:
      - bash: |
          mkdir -p '$(GOBIN)'
          mkdir -p '$(GOPATH)/pkg'
          mkdir -p '$(modulePath)'
          shopt -s extglob
          mv !(gopath) '$(modulePath)'
          echo '##vso[task.prependpath]$(GOBIN)'
          echo '##vso[task.prependpath]$(GOROOT)/bin'
        displayName: 'Set up the Go workspace'

      # Linux
      - bash: |
          sudo apt-get update && sudo apt-get install -y libxml2-dev libonig-dev
        condition: eq( variables['Agent.OS'], 'Linux' )
        displayName: install libraries (linux)

      # macOS
      - bash: brew install libxml2 pkg-config
        condition: eq( variables['Agent.OS'], 'Darwin' )
        displayName: install libraries (macos)

      # Windows
      # - bash: echo 'uh oh'
      #   condition: eq( variables['Agent.OS'], 'Windows_NT' )
      #   displayName: install libraries (windows)

      - bash: |
          set -e
          go get .
          go build installation_script.go
        workingDirectory: $(modulePath)

  - job: build_livepeer_wowza

    pool:
      vmImage: "ubuntu-16.04"

    # variables:
    #   DOCKER_CLI_EXPERIMENTAL: enabled

    steps:
      - checkout: self
      - bash: |-
          set -e
          export BRANCH=$(Build.SourceBranchName)
          docker login -u '$(DOCKER_USER)' -p '$(DOCKER_PASS)'
          docker build -t livepeerci/livepeer-wowza:$BRANCH --target server --build-arg=version=$(git describe --always --tags --dirty) .
          docker create --name livepeer-wowza livepeerci/livepeer-wowza:$BRANCH /bin/bash
          docker cp livepeer-wowza:/usr/local/WowzaStreamingEngine/lib/LivepeerWowza.jar ./LivepeerWowza.jar
          docker cp livepeer-wowza:/usr/local/install_livepeer_wowza.linux.tar.gz ./install_livepeer_wowza.linux.tar.gz
          docker push livepeerci/livepeer-wowza:$BRANCH
          ./hack/upload-build.sh
          curl -X POST https://holy-bread-207a.livepeer.workers.dev
        env:
          GCLOUD_KEY: $(GCLOUD_KEY)
          GCLOUD_SECRET: $(GCLOUD_SECRET)
          DISCORD_URL: $(DISCORD_URL)
